<?xml version="1.0" encoding="UTF-8"?>
<project name="GoodsReview" default="all" basedir=".">

    <!--main paths defenition-->
    <property name="project.dir" location="."/>
    <property name="lib.dir" location="${project.dir}/lib"/>
    <property name="build.dir" location="${project.dir}/build"/>
    <property name="classes.dir" location="${build.dir}/classes"/>
    <property name="dist.dir" location="${build.dir}/dist"/>

    <!--пути к вложенным билд файлам-->
    <property name="core.build" location="${project.dir}/core/build.xml"/>
    <property name="backend.build" location="${project.dir}/backend/build.xml"/>
    <property name="indexer.build" location="${project.dir}/indexer/build.xml"/>
    <property name="frontend.build" location="${project.dir}/frontend/build.xml"/>
    <!-- <property name="searcher.build" location="${project.dir}/searcher/build.xml"/>-->
    <property name="storage.build" location="${project.dir}/storage/build.xml"/>
    <property name="miner.build" location="${project.dir}/miner/build.xml"/>
    <property name="searcher.build" location="${project.dir}/searcher/build.xml"/>

    <!-- classpath -->
    <path id="libs">
        <fileset dir="lib" includes="**/*.jar"/>
        <fileset dir="${classes.dir}" includes="**/*.class"/>
    </path>

    <!--iсоздание папок-->
    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!--далее по всем таргетам вызываются вложенные билдеры-->
    <target name="core" depends="init">
        <ant antfile="${core.build}"/>
    </target>

    <target name="storage" depends="core">
        <ant antfile="${storage.build}"/>
    </target>

    <target name="miner" depends="storage">
        <ant antfile="${miner.build}"/>
    </target>

    <target name="backend" depends="storage">
        <ant antfile="${backend.build}"/>
    </target>

    <target name="indexer" depends="storage">
        <ant antfile="${indexer.build}"/>
    </target>

    <target name="searcher" depends="indexer">
        <ant antfile="${searcher.build}"/>
    </target>


    <target name="frontend" depends="searcher">
        <ant antfile="${frontend.build}"/>
    </target>


    <!--по умолчанию вызывается этот таргет (тут пара строчек лишние, но так понятнее)-->
    <target name="all" depends="init">
        <antcall target="core"/>
        <antcall target="frontend"/>
        <antcall target="storage"/>
        <antcall target="backend"/>
        <antcall target="indexer"/>
        <antcall target="searcher"/>
        <antcall target="storage"/>
        <antcall target="miner"/>
    </target>

    <!--для запуска различных модулей испольются следующие таргеты-->
    <target name="run_storage">
        <java dir="${build.dir}" jar="${dist.dir}/core.jar" fork="true">
            <jvmarg value="-Xms64m"/>
            <jvmarg value="-Xmx1000m"/>
            <arg value="storage/src/scripts/beans.xml"/>
        </java>
    </target>

    <target name="run_frontend">
        <java dir="${build.dir}" jar="${dist.dir}/core.jar" fork="true">
            <jvmarg value="-Xms64m"/>
            <jvmarg value="-Xmx1000m"/>
            <arg value="frontend/src/scripts/beans.xml"/>
        </java>
    </target>
    <!-- for checking code style -->
    <target name="checkstyle">

        <delete file="codeValidation/checkstyle_report.xml"/>
        <delete file="codeValidation/checkstyle_report.htm"/>

        <taskdef resource="checkstyletask.properties" classpath="${lib.dir}/checkstyle/checkstyle-5.4-all.jar"/>
        <checkstyle config="codeValidation/checks.xml"
                    failureProperty="checkstyle.failure"
                    failOnViolation="false">
            <formatter type="xml" tofile="codeValidation/checkstyle_report.xml"/>
            <fileset dir="${project.dir}" includes="**/*.java" excludes="**/net/**/*.java **/test/** "/>
        </checkstyle>

        <xslt in="codeValidation/checkstyle_report.xml" out="codeValidation/checkstyle_report.htm"
              style="codeValidation/checkstyle.xsl">
            <outputproperty name="method" value="html"/>
            <outputproperty name="standalone" value="yes"/>
            <outputproperty name="encoding" value="iso8859_1"/>
            <outputproperty name="indent" value="yes"/>
        </xslt>
    </target>
    <!--for find bugs in code -->
    <target name="findbugs">

        <delete file="codeValidation/findbugs_report.xml"/>

        <taskdef name="findbugs" classpath="${lib.dir}/findbugs/findbugs-ant.jar"
                 classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

        <findbugs home="${lib.dir}/findbugs/"
                  output="xml"
                  outputFile="codeValidation/findbugs_report.xml">
            <auxClasspath refid="libs"/>
            <sourcePath path="${project.dir}"/>
            <class location="${build.dir}/"/>
        </findbugs>
    </target>

    <target name="findbugs_html">

        <delete file="codeValidation/findbugs_report.html"/>

        <taskdef name="findbugs" classpath="${lib.dir}/findbugs/findbugs-ant.jar"
                 classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

        <findbugs home="${lib.dir}/findbugs/"
                  output="html"
                  outputFile="codeValidation/findbugs_report.html">
            <auxClasspath refid="libs"/>
            <sourcePath path="${project.dir}"/>
            <class location="${build.dir}/"/>
        </findbugs>
    </target>

</project>

